// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NezamMVCOneLayer.DataAccess.Data;

namespace NezamMVCOneLayer.DataAccess.Migraition
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210819192136_UpdateMemberToDb")]
    partial class UpdateMemberToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NezamMVCOneLayer.Models.Candid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CandidCode")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CodeMeli")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FiledId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Candids");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.Elect", b =>
                {
                    b.Property<int>("CandidId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Time")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CandidId", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("Elects");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FieldName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Bmonth")
                        .HasColumnType("int");

                    b.Property<int>("Byear")
                        .HasColumnType("int");

                    b.Property<string>("CityBorn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CodeMeli")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FatherFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MotherFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MotherLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ozviat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Parvandeh")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Shsh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isAuthorized")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("FieldId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("citieCodesss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tests");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.Candid", b =>
                {
                    b.HasOne("NezamMVCOneLayer.Models.City", "City")
                        .WithMany("Candids")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Candids_Cities");

                    b.Navigation("City");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.Elect", b =>
                {
                    b.HasOne("NezamMVCOneLayer.Models.Candid", "Candid")
                        .WithMany("Elects")
                        .HasForeignKey("CandidId")
                        .HasConstraintName("FK_Elects_Condids")
                        .IsRequired();

                    b.HasOne("NezamMVCOneLayer.Models.Member", "Member")
                        .WithMany("Elects")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Elects_Members")
                        .IsRequired();

                    b.Navigation("Candid");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.Member", b =>
                {
                    b.HasOne("NezamMVCOneLayer.Models.City", "City")
                        .WithMany("Members")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Members_Cities");

                    b.HasOne("NezamMVCOneLayer.Models.Field", "Field")
                        .WithMany("Members")
                        .HasForeignKey("FieldId")
                        .HasConstraintName("FK_Members_Fields")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.Candid", b =>
                {
                    b.Navigation("Elects");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.City", b =>
                {
                    b.Navigation("Candids");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.Field", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("NezamMVCOneLayer.Models.Member", b =>
                {
                    b.Navigation("Elects");
                });
#pragma warning restore 612, 618
        }
    }
}
